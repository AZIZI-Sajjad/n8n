# # docker compose --file /var/docker/docker-compose.d/n8n/docker-compose.yml --project-name n8n-postgresql config
# # docker compose --file /var/docker/docker-compose.d/n8n/docker-compose.yml --project-name n8n-postgresql up
# # docker compose --file /var/docker/docker-compose.d/n8n/docker-compose.yml --project-name n8n-postgresql down
# # docker compose --file /var/docker/docker-compose.d/n8n/docker-compose.yml --project-name n8n-postgresql up -d
# # docker compose --file /var/docker/docker-compose.d/n8n/docker-compose.yml --project-name n8n-postgresql logs -f

version: "3.8"
services:
  postgres:
    build:
      context: .
      dockerfile: ${POSTGRES_DOKCER_FILE}
    container_name: ${POSTGRES_CONTAINER_HOST_NAME}
    hostname: ${POSTGRES_CONTAINER_HOST_NAME}
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      net-bridge-n8n-postgres:
        ipv4_address: '${POSTGRES_CONTAINER_IP}'

  n8n:
    build:
      context: .
      dockerfile: ${N8N_DOKCER_FILE}
    container_name: ${N8N_CONTAINER_HOST_NAME}
    hostname: ${N8N_CONTAINER_HOST_NAME}
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "${N8N_PORT}:${N8N_PORT}"
    volumes:
      - ./n8n-data:/home/node/.n8n
    depends_on:
      - postgres
    networks:
      net-bridge-n8n-postgres:
        ipv4_address: '${N8N_CONTAINER_IP}'

networks:
  net-bridge-n8n-postgres:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: '${BRIDGE_NETWORK_SUBNET}'
          gateway: '${BRIDGE_NETWORK_GW}'
